apply plugin: 'com.android.model.library'

def ndk_skipX86 = (rootProject.hasProperty("readium_ndk_skipX86") && rootProject.readium_ndk_skipX86)
def ndk_skipARM = (rootProject.hasProperty("readium_ndk_skipARM") && rootProject.readium_ndk_skipARM)
def ndk_clang = (rootProject.hasProperty("readium_ndk_clang") && rootProject.readium_ndk_clang)
def ndk_experimental = (rootProject.hasProperty("readium_ndk_experimental") && rootProject.readium_ndk_experimental)

model {
    android {
        compileSdkVersion = 28
        buildToolsVersion = "28.0.3"

        defaultConfig {

            // manifest@package attribute in src/main/AndroidManifest.xml
            // applicationId = "org.readium.sdk.android"

            // manifest/uses-sdk@android:minSdkVersion attribute in src/main/AndroidManifest.xml
            minSdkVersion.apiLevel = 19

            // manifest/uses-sdk@android:targetSdkVersion attribute in src/main/AndroidManifest.xml
            targetSdkVersion.apiLevel = 28

            // manifest@android:versionCode attribute in src/main/AndroidManifest.xml
            versionCode 31

            // manifest@android:versionName attribute in src/main/AndroidManifest.xml
            versionName "1.31"
        }

        sources {
            main {
                java {
                    source {
                        srcDirs = [ './src/main/java' ]
                    }
                }

                jniLibs {
                    dependencies {
                        project ":epub3"
                    }
                }
            }
        }

        buildTypes {
            debug {
                minifyEnabled = false
            }
            release {
                minifyEnabled = false
            }
        }

        productFlavors {
            if (!ndk_skipARM) {
                // create("armeabi-v7a") {
                //     ndk.with {
                //         abiFilters.add("armeabi-v7a")
                //     }
                // }
                // create("arm64-v8a") {
                //     ndk.with {
                //         abiFilters.add("arm64-v8a")
                //     }
                // }
                create("armeabi-v7a--arm64-v8a") {
                    ndk.with {
                        abiFilters.add("armeabi-v7a")
                        abiFilters.add("arm64-v8a")
                    }
                }
            }

            if (!ndk_skipX86) {
                // create("x86") {
                //     ndk.with {
                //         abiFilters.add("x86")
                //     }
                // }
                // create("x86_64") {
                //     ndk.with {
                //         abiFilters.add("x86_64")
                //     }
                // }
                create("x86--x86_64") {
                    ndk.with {
                        abiFilters.add("x86")
                        abiFilters.add("x86_64")
                    }
                }
            }

            if (!ndk_skipARM && !ndk_skipX86) {
                create("armeabi-v7a--arm64-v8a--x86--x86_64") {
                    ndk.with {
                        abiFilters.add("armeabi-v7a")
                        abiFilters.add("arm64-v8a")
                        abiFilters.add("x86")
                        abiFilters.add("x86_64")
                    }
                }
            }
        }
    }
}

task copyLibs {
    doLast {
        println ("Copy libs (SKIPPED)")
        // println ("Copy libs ... ${currentBuildType}")
        // android.productFlavors.all { flavor ->
        //     android.buildTypes.all { buildType ->
        //         if (currentBuildType == buildType.name) {
        //             flavor.ndk.abiFilters.each { abiFilter ->

        //                 def srcDirPath_LIBS = "${project.projectDir}/build/intermediates/binaries/${buildType.name}/${flavor}/lib/${abiFilter}"
        //                 def dstDirPath_LIBS = "${project.projectDir}/libs/${buildType.name.toUpperCase()}/${abiFilter}"

        //                 copy {
        //                     from("${srcDirPath_LIBS}") {
        //                         include("*.so")
        //                     }
        //                     into("${dstDirPath_LIBS}")
        //                 }
        //             }
        //         }
        //     }
        // }
    }
}
